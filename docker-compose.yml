version: '3.8'

services:
  camera-manager:
    build: 
      context: .
      dockerfile: camera_manager/Dockerfile
    ports:
      - "8010:8010"
    volumes:
      - ./output_image:/app/output_image:rw
      - ./camera_manager/config:/app/camera_manager/config:rw
      - ./logs:/app/logs:rw
      - ./videos:/app/videos:ro  # Mount videos folder for local video files
    environment:
      - POSE_SERVICE_URL=http://detector-pose:8011/pose/image
      - DETECTION_SERVICE_URL=http://detector-detections:8013/detect/image
      - PYTHONPATH=/app
      - CONFIG_DIR=/app/camera_manager/config
      - OUTPUT_DIR=/app/output_image
      - LOG_DIR=/app/logs
    depends_on:
      - detector-pose
      - detector-detections
    restart: unless-stopped
    networks:
      - pose-network
      
  detector-pose:
    build: 
      context: .
      dockerfile: detector_pose/Dockerfile
    ports:
      - "8011:8011"
    volumes:
      - ./output_image:/app/output_image:rw
      - ./logs:/app/logs:rw
    environment:
      - ALERT_SERVICE_URL=http://alert-logic:8012/alert
      - PYTHONPATH=/app
      - OUTPUT_DIR=/app/output_image
      - LOG_DIR=/app/logs
    networks:
      - pose-network

  detector-detections:
    build: 
      context: .
      dockerfile: detector_detections/Dockerfile
    ports:
      - "8013:8013"
    volumes:
      - ./output_image:/app/output_image:rw
      - ./logs:/app/logs:rw
    environment:
      - ALERT_SERVICE_URL=http://alert-logic:8012/alert
      - PYTHONPATH=/app
      - OUTPUT_DIR=/app/output_image
      - LOG_DIR=/app/logs
    networks:
      - pose-network

  alert-logic:
    build: 
      context: .
      dockerfile: alert_logic/Dockerfile
    ports:
      - "8012:8012"
    volumes:
      - ./output_image:/app/output_image:rw
      - ./logs:/app/logs:rw
    environment:
      - PYTHONPATH=/app
      - OUTPUT_DIR=/app/output_image
      - LOG_DIR=/app/logs
    networks:
      - pose-network

# Camera-orchestrator service has been replaced by camera-manager

networks:
  pose-network:
